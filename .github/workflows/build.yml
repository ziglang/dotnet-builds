on:
  workflow_dispatch:
    inputs:
      tfm:
        description: Target framework moniker
        required: true
        type: choice
        options:
          - net10.0
          - net9.0
      arch:
        description: Target architecture
        required: true
        type: choice
        options:
          - arm
          - arm64
          - loongarch64
          - ppc64le
          - riscv64
          - s390x
          - x64
      runtime:
        description: Runtime flavor
        required: true
        type: choice
        options:
          - coreclr
          - mono
      ref:
        description: Git branch or tag
        required: true
        type: string
permissions:
  contents: read
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean
        uses: AdityaGarg8/remove-unwanted-software@v5
        with:
          remove-android: true
          remove-cached-tools: true
          remove-codeql: true
          remove-docker-images: true
          remove-dotnet: true
          remove-haskell: true
          remove-large-packages: true
          remove-swapfile: true
      - name: Clone
        run: |
          git clone --branch ${{ inputs.ref }} --depth 1 --single-branch https://github.com/dotnet/dotnet
      - name: Build
        run: |
          docker run \
            --rm \
            --platform linux/amd64 \
            --volume ${{ github.workspace }}/dotnet:/dotnet \
            --workdir /dotnet \
            --env ROOTFS_DIR=/crossrootfs/${{ inputs.arch }} \
            mcr.microsoft.com/dotnet-buildtools/prereqs:azurelinux-3.0-${{ inputs.tfm }}-cross-${{ inputs.arch == 'x64' && 'amd64' || inputs.arch }} \
            ./build.sh \
              --clean-while-building \
              --prep \
              --source-only \
              --arch ${{ inputs.arch }} \
              --os linux \
              ${{ inputs.runtime == 'mono' && '--use-mono-runtime' || '' }} \
              -property:OfficialBuildId=$(date +%Y%m%d).99
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-sdk-linux-${{ inputs.arch }}
          path: ${{ github.workspace }}/dotnet/artifacts/assets/Release/Sdk/*/dotnet-sdk-*-linux-${{ inputs.arch }}.tar.gz
